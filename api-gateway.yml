spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: purchase-service
          uri: lb://purchase-service
          predicates:
            - Path=/api/v1/purchases/**
          filters:
            - CorsFilter   # Add CorsFilter before other filters
            - ApikeyAuthFilter
            - JwtAuthFilter

        - id: customer-service
          uri: lb://customer-service
          predicates:
            - Path=/api/v1/customers/**
          filters:
            - CorsFilter   # Add CorsFilter before other filters
            - ApikeyAuthFilter
            - JwtAuthFilter

        - id: category-service
          uri: lb://category-service
          predicates:
            - Path=/api/v1/categories/**
          filters:
            - CorsFilter   # Add CorsFilter before other filters
            - ApikeyAuthFilter
            - JwtAuthFilter

        - id: company-service
          uri: lb://company-service
          predicates:
            - Path=/api/v1/companies/**
          filters:
            - CorsFilter   # Add CorsFilter before other filters
            - ApikeyAuthFilter
            - JwtAuthFilter

        - id: coupon-service
          uri: lb://coupon-service
          predicates:
            - Path=/api/v1/coupons/**
          filters:
            - CorsFilter   # Add CorsFilter before other filters
            - ApikeyAuthFilter
            - JwtAuthFilter

        - id: identity-service
          uri: lb://identity-service
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - CorsFilter   # Add CorsFilter before other filters

        - id: identity-service
          uri: lb://identity-service
          predicates:
            - Path=/api/v1/users/**
          filters:
            - CorsFilter   # Add CorsFilter before other filters

    consul:
      discovery:
        instanceId: ${spring.application.name}
        health-check-interval: 15s
      config:
        management:
          enabled: true

management:
  endpoint:
    gateway:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

server:
  port: 8080
  error:
    include-message: always
